function dmat = distmat ( image , watermark , bounds)
	if( ~exist('image','var') )
		error('`image` is not defined!');
	elseif( isa(image,"numeric") )
		im=image;
	elseif( exist(image,'file') )
		im=imread(image);
	else
		error('Inexplicable `image` entry!');
	endif
	
	if( ~exist('watermark','var') )
		watermark=0.05;
		warning("watermark defaulted to 0.05");
	endif
	
	if( ~exist('bounds','var') || size(bounds) ~= [1,2] || bounds(1) >= bounds(2) )
		bounds=[500,30000];
		warning("bounds defaulted to [500,30000]");
	endif

	w=[-3:-1,1:3]; w(2,:)=1;

	Dim=max(avd(1,0,w,im),max(avd(0,1,w,im),max(avd(1,1,w,im),avd(-1,1,w,im))));
	for i=2:size(im,3)
		Dim=max(Dim,max(avd(1,0,w,im),max(avd(0,1,w,im),max(avd(1,1,w,im),avd(-1,1,w,im)))));
	endfor

	N = neighborhood( mat2gray(Dim) , ceil(size(Dim)/2) , 500 ) ;

	C=componentsmat(N,watermark);

	windex=intersect( find( arrayfun(@(l) sum(sum(C==l)),unique(C)) > bounds(1)), find( arrayfun(@(l) sum(sum(C==l)),unique(C)) < bounds(2)) );

	X=cell2mat(arrayfun(@(l) matE( C == l ) , unique(C)(windex) , "UniformOutput",false));

	dmat=sqrt( (diag(X(:,1))*ones(length(X(:,1))) - ones(length(X(:,1)))*diag(X(:,1))).^2 + (diag(X(:,2))*ones(length(X(:,2))) - ones(length(X(:,2)))*diag(X(:,2))).^2 );
endfunction
